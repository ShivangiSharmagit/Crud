@model Crud.Models.Class1

@{
    ViewBag.Title = "Create";
}

<h2>Add Employee Details</h2>


@using (Html.BeginForm("Create","Home",FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Create</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    <div class="form-group">
        @Html.LabelFor(model => model.NAME, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NAME, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NAME, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GENDER, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GENDER, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GENDER, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DEPARTMENT, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DEPARTMENT, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DEPARTMENT, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SALARY, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SALARY, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SALARY, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ADDRESS, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ADDRESS, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
        </div>
    </div>
    <div>
        @Html.ActionLink("Education Details", "EducationDetails")
    </div>


    <div class="form-group">
        @if (TempData["Edit"] != null)
        {<div class="col-md-offset-2 col-md-10">
                <input type="submit" value="EDIT" class="btn btn-default" />
            </div>
        }
        else
        {
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-default" />
            </div>
        }

    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Read")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
